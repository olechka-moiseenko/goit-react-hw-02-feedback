{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/Statistics/Statistics.module.css","components/Notification/Notification.module.css","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Statistics/Statistics.js","components/Notification/Notification.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","FeedbackOptions","options","onLeaveFeedback","className","map","option","name","type","style","button","onClick","Section","title","children","section","Statistics","good","neutral","bad","total","positiveFeedback","statistics","Notification","message","notification","App","state","handleBtnClick","e","setState","prevState","target","countTotalFeedback","this","Math","round","Object","keys","countPositiveFeedbackPercentage","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oIACAA,EAAOC,QAAU,CAAC,OAAS,kC,gBCA3BD,EAAOC,QAAU,CAAC,QAAU,2B,gBCA5BD,EAAOC,QAAU,CAAC,WAAa,iC,gBCA/BD,EAAOC,QAAU,CAAC,aAAe,qC,qKCClB,SAASC,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBACjD,OACE,qBAAKC,UAAU,WAAf,SACGF,EAAQG,KAAI,SAACC,GAAD,OACX,wBAEEC,KAAMD,EACNE,KAAK,SACLJ,UAAWK,IAAMC,OACjBC,QAASR,EALX,SAOGG,GANIA,Q,oBCLA,SAASM,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,0BAASV,UAAWK,IAAMM,QAA1B,UACE,6BAAKF,IACJC,K,oBCJQ,SAASE,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,IACAC,EAEC,EAFDA,MACAC,EACC,EADDA,iBAEA,OACE,qBAAIjB,UAAWK,IAAMa,WAArB,UACE,wCACQ,+BAAOL,OAEf,2CACW,+BAAOC,OAElB,uCACO,+BAAOC,OAEd,yCACS,+BAAOC,OAEhB,qDACqB,iCAAOC,EAAP,a,qBCvBZ,SAASE,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,mBAAGpB,UAAWK,IAAMgB,aAApB,SAAmCD,I,IC4D7BE,E,4MAvDbC,MAAQ,CACNV,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPS,eAAiB,SAACC,GAChB,EAAKC,UAAS,SAACC,GACb,OAAO,eACJF,EAAEG,OAAOzB,KAAOwB,EAAUF,EAAEG,OAAOzB,MAAQ,O,EAKlD0B,mBAAqB,WACnB,MAA+B,EAAKN,MACpC,OADA,EAAQV,KAAR,EAAcC,QAAd,EAAuBC,K,qEAIzB,WACE,IAAMC,EAAQc,KAAKD,qBACXhB,EAASiB,KAAKP,MAAdV,KAER,OAAOkB,KAAKC,MAAc,IAAPnB,EAAcG,K,oBAGnC,WACE,MAA+Bc,KAAKP,MAA5BV,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACvB,OACE,sBAAKf,UAAU,YAAf,UACE,cAACQ,EAAD,CAASC,MAAM,wBAAf,SACE,cAACZ,EAAD,CACEC,QAASmC,OAAOC,KAAKJ,KAAKP,OAC1BxB,gBAAiB+B,KAAKN,mBAI1B,cAAChB,EAAD,CAASC,MAAM,aAAf,SACGqB,KAAKD,qBAAuB,EAC3B,cAACjB,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOc,KAAKD,qBACZZ,iBAAkBa,KAAKK,oCAGzB,cAAChB,EAAD,CAAcC,QAAQ,+B,GAhDhBgB,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.146892a5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__1ohm_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__S963d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__Ft7r7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__GyXCL\"};","import style from \"./FeedbackOptions.module.css\";\r\n\r\nexport default function FeedbackOptions({ options, onLeaveFeedback }) {\r\n  return (\r\n    <div className=\"controls\">\r\n      {options.map((option) => (\r\n        <button\r\n          key={option}\r\n          name={option}\r\n          type=\"button\"\r\n          className={style.button}\r\n          onClick={onLeaveFeedback}\r\n        >\r\n          {option}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import style from \"./Section.module.css\";\r\n\r\nexport default function Section({ title, children }) {\r\n  return (\r\n    <section className={style.section}>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n","import style from \"./Statistics.module.css\";\r\n\r\nexport default function Statistics({\r\n  good,\r\n  neutral,\r\n  bad,\r\n  total,\r\n  positiveFeedback,\r\n}) {\r\n  return (\r\n    <ul className={style.statistics}>\r\n      <li>\r\n        Good: <span>{good}</span>\r\n      </li>\r\n      <li>\r\n        Neutral: <span>{neutral}</span>\r\n      </li>\r\n      <li>\r\n        Bad: <span>{bad}</span>\r\n      </li>\r\n      <li>\r\n        Total: <span>{total}</span>\r\n      </li>\r\n      <li>\r\n        Positive Feedback: <span>{positiveFeedback}%</span>\r\n      </li>\r\n    </ul>\r\n  );\r\n}\r\n","import style from \"./Notification.module.css\";\r\nexport default function Notification({ message }) {\r\n  return <p className={style.notification}>{message}</p>;\r\n}\r\n","import React, { Component } from \"react\";\nimport FeedbackOptions from \"./components/FeedbackOptions/FeedbackOptions\";\nimport Section from \"./components/Section/Section\";\nimport Statistics from \"./components/Statistics/Statistics.js\";\nimport Notification from \"./components/Notification/Notification\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleBtnClick = (e) => {\n    this.setState((prevState) => {\n      return {\n        [e.target.name]: prevState[e.target.name] + 1,\n      };\n    });\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage() {\n    const total = this.countTotalFeedback();\n    const { good } = this.state;\n\n    return Math.round((good * 100) / total);\n  }\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    return (\n      <div className=\"container\">\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={Object.keys(this.state)}\n            onLeaveFeedback={this.handleBtnClick}\n          />\n        </Section>\n\n        <Section title=\"Statistics\">\n          {this.countTotalFeedback() > 0 ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback()}\n              positiveFeedback={this.countPositiveFeedbackPercentage()}\n            />\n          ) : (\n            <Notification message=\"No feedback given\"></Notification>\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}